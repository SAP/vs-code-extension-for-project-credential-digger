{
    ".js": {
        "opt_1": {
            "dep": "npm install dotenv",
            "imp": "",
            "init": "\nIDT_TMPrequire('dotenv').config(); // NEW LINE ADDED\n\n",
            "use": "process.env.SECRET_TMP",
            "tag": ""
        }
    },
    ".java": {
        "opt_1": {
            "dep": "\t<!-- NEW DEPENDENCY ADDED! -->\n\t\t<dependency>\n\t\t\t<groupId>io.github.cdimascio</groupId>\n\t\t\t<artifactId>dotenv-java</artifactId>\n\t\t\t<version>2.2.0</version>\n\t\t</dependency>\n\t</dependencies>",
            "imp": "import io.github.cdimascio.dotenv.Dotenv; // NEW LINE ADDED\n",
            "init": "\nIDT_TMPDotenv dotenv = Dotenv.configure().load(); // NEW LINE ADDED \n\n",
            "use": "dotenv.get(\"SECRET_TMP\")",
            "tag": "package"
        },
        "opt_2": {
            "dep": "",
            "imp": "import java.io.BufferedReader; // NEW LINE ADDED\nimport java.io.FileReader; // NEW LINE ADDED\nimport java.io.IOException; // NEW LINE ADDED\n\n",
            "init": "\n// NEW FUNCTION ADDED! To read the .env file without a dependency. \n// Please check if you need this function static or not\n\tpublic static String getSecret(String secretName) {\n\t\ttry {\n\t\t\tBufferedReader reader = new BufferedReader(new FileReader(\".env\"));\n\t\t\tString line, secret = \"\";\n\t\t\twhile ((line = reader.readLine()) != null) {\n\t\t\t\tString[] parts = line.split(\"=\");\n\t\t\t\tif (parts.length == 2 && parts[0].trim().equals(secretName)) {\n\t\t\t\t\tsecret = parts[1].trim();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treader.close();\n\t\t\treturn secret;\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t\treturn \"\";\n\t\t}\n\t}\n",
            "use": "getSecret(\"SECRET_TMP\")",
            "tag": ""
        }
    },
    ".py": {
        "opt_1": {
            "dep": "pip install python-dotenv",
            "imp": "from dotenv import load_dotenv # NEW LINE ADDED\nimport os # NEW LINE ADDED\n",
            "init": "\nIDT_TMPload_dotenv() # NEW LINE ADDED\n\n",
            "use": "os.getenv(\"SECRET_TMP\")",
            "tag": ""
        }
    },
    ".cs": {
        "opt_1": {
            "dep": "dotnet add package DotNetEnv",
            "imp": "",
            "init": "\nIDT_TMPDotNetEnv.Env.TraversePath().Load(); // NEW LINE ADDED\n\n",
            "use": "Environment.GetEnvironmentVariable(\"SECRET_TMP\")",
            "tag": ""
        }
    },
    ".php": {
        "opt_1": {
            "dep": "composer require vlucas/phpdotenv",
            "imp": "IDT_TMPrequire_once __DIR__ . '/vendor/autoload.php'; // NEW LINE ADDED\n",
            "init": "\nIDT_TMP$dotenv = Dotenv\\Dotenv::createImmutable(__DIR__); // NEW LINE ADDED\nIDT_TMP$dotenv->load(); // NEW LINE ADDED\n\n",
            "use": "$_ENV[\"SECRET_TMP\"]",
            "tag": "<?php"
        }
    }
}
